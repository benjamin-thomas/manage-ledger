#!/usr/bin/env ruby

# Inspired by: https://gist.github.com/TomK32/2dcb66bc238cc11ba475

require 'bundler'
require 'logger'

env = ENV['ENV'] || ''
Bundler.require(:default, env)

require 'optparse'

options = {}
OptionParser.new do |opts|
  pgm_name = File.basename($PROGRAM_NAME)
  opts.banner = "Usage: #{pgm_name} [OPTIONS] GNUCASH_FILEPATH"

  opts.on('-v', '--verbose', 'Run verbosely') do |v|
    options[:verbose] = v
  end

  opts.on('--no-eager', 'Do not load all data up front (this will be slower, could be usefull for debugging)') do
    options[:no_eager] = true
  end
end.parse!

db_path = ARGV[0] || exec("#{$PROGRAM_NAME} -h")

unless File.file?(db_path)
  warn("Not a file: #{db_path}")
  exit 1
end

DB = Sequel.connect("sqlite://#{db_path}")
options[:verbose] && DB.logger = Logger.new(STDERR)

require './lib/gnucash'

txs = Transaction
  .order(Sequel.asc(:post_date))

unless options[:no_eager]
  txs = txs
    .eager_graph(:operations => :ofx_slot)
    .all # this is important
end

txs.each do |t|
  puts t.to_ledger
  puts
end
